library(afex)
library(emmeans)
library(parallel)
(nc = detectCores())
cl <- makeCluster(rep("localhost", nc))
df_all = read.csv('./data/pilot/df_long_test_cluster.csv')
df_all$cluster = as.factor(df_all$cluster)
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable'))
df_all$intention = as.factor(df_all$intention)
df_all$trust_cond = factor(df_all$trust_cond, levels=c('high', 'medium', 'low'))
df_all$absent = as.logical(df_all$absent)
# Differences between absent and non absent trials
modelAbsent = afex::mixed(path_length ~ absent + (absent|participant_code), data=df_all, cl=cl)
modelAbsent
afex_plot(modelAbsent, 'absent')
em = emmeans::emmeans(modelAbsent, ~absent)
em
pairs(em)
# Differences between absent and non absent trials in probability of delivering the letter
modelAbsent = afex::mixed(delivered ~ absent + (1|participant_code), data=df_all, cl=cl, family=binomial(link="logit"),
method = "LRT")
modelAbsent
afex_plot(modelAbsent, 'absent')
em = emmeans::emmeans(modelAbsent, ~absent)
em
pairs(em)
# Rest of behavioural analysis for non absent trials
df = df_all[df_all$absent == FALSE,]
# Path as continuous variable
##Â NO CLUSTER
modelLength = afex::mixed(path_length ~ certainty*trust_cond + (trust_cond|participant_code), data=df, cl=cl)
modelLength
afex_plot(modelLength, 'trust_cond', 'certainty')
em = emmeans::emmeans(modelLength, ~certainty)
em
pairs(em)
em = emmeans::emmeans(modelLength, ~trust_cond)
em
pairs(em)
library(afex)
library(emmeans)
library(parallel)
(nc = detectCores())
cl <- makeCluster(rep("localhost", nc))
df_all = read.csv('./data/pilot/df_long_test_cluster.csv')
df_all$cluster = as.factor(df_all$cluster)
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable'))
df_all$intention = as.factor(df_all$intention)
df_all$trust_cond = factor(df_all$trust_cond, levels=c('high', 'medium', 'low'))
df_all$absent = as.logical(df_all$absent)
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust_cond + (trust_cond|participant_code), data=df, cl=cl)
modelLength
afex_plot(modelLength, 'trust_cond', 'certainty')
em = emmeans::emmeans(modelLength, ~certainty)
em
pairs(em)
em = emmeans::emmeans(modelLength, ~trust_cond)
em
pairs(em)
library(afex)
library(emmeans)
library(parallel)
(nc = detectCores())
cl <- makeCluster(rep("localhost", nc))
df_all = read.csv('./data/pilot/df_long_test_cluster.csv')
df_all$cluster = as.factor(df_all$cluster)
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable'))
df_all$intention = as.factor(df_all$intention)
df_all$trust_cond = factor(df_all$trust_cond, levels=c('high', 'medium', 'low'))
df_all$absent = as.logical(df_all$absent)
# Rest of behavioural analysis for non absent trials
df = df_all[df_all$absent == FALSE,]
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust_cond + (trust_cond|participant_code), data=df, cl=cl)
modelLength
afex_plot(modelLength, 'trust_cond', 'certainty')
em = emmeans::emmeans(modelLength, ~certainty)
em
pairs(em)
em = emmeans::emmeans(modelLength, ~trust_cond)
em
pairs(em)
# Predict the dataset from the model
predict(modelLength, newdata = df_a)
# Predict the dataset from the model
predict(modelLength$full_model, newdata = df)
# Predict the dataset from the model
df
predict(modelLength$full_model, newdata=df)
modelPred
modelPred = predict(modelLength$full_model, newdata=df)
modelPred
dfPred$preds = modelPred
dfPred = df
dfPred$preds = modelPred
dfPred
write.csv(dfPred, 'data/simulations/linear_mixed_model_preds.csv')
get_df(modelLength, type = "model")
n_parameters(modelLength, type = "model")
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable'))
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
df_all$absent = as.logical(df_all$absent)
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust_cond + (trust_cond|participant_code), data=df, cl=cl)
modelLength
afex_plot(modelLength, 'trust_cond', 'certainty')
em = emmeans::emmeans(modelLength, ~certainty)
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
df_all$trust = factor(df_all$trust, levels=c('high', 'medium', 'low'))
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust + (trust|participant_code), data=df, cl=cl)
df_all$path_length = numeric(df_all$path_length)
df_all$path_length = as.numeric(df_all$path_length)
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust + (trust|participant_code), data=df, cl=cl)
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust + (trust|participant_code), data=df_all, cl=cl)
# Remove df_all trust == None
df = df_all[df_all$trust != 'none']
# Remove df_all trust == None
df = df_all[df_all$trust != 'none',]
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust + (trust|participant_code), data=df, cl=cl)
modelLength
afex_plot(modelLength, 'trust_cond', 'certainty')
em = emmeans::emmeans(modelLength, ~certainty)
em
pairs(em)
em = emmeans::emmeans(modelLength, ~trust_cond)
em
pairs(em)
modelPred = predict(modelLength$full_model, newdata=df)
dfPred = df
dfPred$preds = modelPred
pairs(em)
modelPred = predict(modelLength$full_model, newdata=df)
dfPred = df
dfPred$preds = modelPred
n_parameters(modelLength, type = "model")
write.csv(dfPred, 'data/simulations/heuristic_mixed_model_preds.csv')
# Remove df_all trust == None
df_all$absent = df_all$trust_lvl == 4
df_all$absent
# Remove df_all trust == None
df = df_all[df_all$trust_lvl != 4]
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
df_all$trust = factor(df_all$trust, levels=c('high', 'medium', 'low'))
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
df_all$path_length = as.numeric(df_all$path_length)
df_all = read.csv('./data/pilot/design_matrix_test.csv')
df_all$participant_code = as.factor(df_all$participant_code)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
df_all$path_length = as.numeric(df_all$path_length)
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable')
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable'))
df_all$trust = factor(df_all$trust, levels=c('high', 'medium', 'low'))
df_all$certainty = factor(df_all$certainty, levels=c('uncertain', 'certain', 'immutable'))
df_all$trust = factor(df_all$trust, levels=c('high', 'medium', 'low'))
df_all$path_length = as.numeric(df_all$path_length)
# Remove df_all trust == None
df = df_all[df_all$trust_lvl != 4]
# Remove df_all trust == None
df = df_all[df_all$trust_lvl != 4,]
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust + (trust|participant_code), data=df_all, cl=cl)
modelLength
afex_plot(modelLength, 'trust_cond', 'certainty')
em = emmeans::emmeans(modelLength, ~certainty)
em
pairs(em)
em = emmeans::emmeans(modelLength, ~trust_cond)
em
pairs(em)
modelPred = predict(modelLength$full_model, newdata=df)
dfPred = df
dfPred$preds = modelPred
n_parameters(modelLength, type = "model")
missing(dfPred$preds)
which(is.na(dfPred$preds))
write.csv(dfPred, 'data/simulations/heuristic_mixed_model_preds.csv')
modelPred = predict(modelLength$full_model, newdata=df_all)
# Path as continuous variable
modelLength = afex::mixed(path_length ~ certainty*trust + (trust|participant_code), data=df_all, cl=cl)
modelLength
afex_plot(modelLength, 'trust_cond', 'certainty')
em = emmeans::emmeans(modelLength, ~certainty)
em
pairs(em)
em = emmeans::emmeans(modelLength, ~trust_cond)
em
pairs(em)
modelPred = predict(modelLength$full_model, newdata=df_all)
write.csv(dfPred, 'data/simulations/heuristic_mixed_model_preds.csv')
